//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "WVUIWebViewController.h"

#import "ChildWebViewFailViewDelegate.h"
#import "WVViewControllerProtocol.h"

@class ChildWebViewFailView, NSString, NSURL, NSURLRequest, UIButton, UIControl, UIScrollView, UIView<WVWebViewProtocol>, WVUserContentController;

@interface ChildBaseWVUIWebViewController : WVUIWebViewController <WVViewControllerProtocol, ChildWebViewFailViewDelegate>
{
    _Bool _hasShow;
    CDUnknownBlockType _block;
    CDUnknownBlockType _backBlock;
    CDUnknownBlockType _exitActivityHandler;
    CDUnknownBlockType _indicateActivityReadyHandler;
    CDUnknownBlockType _getProfileInfoHandler;
    ChildWebViewFailView *_failView;
    UIButton *_backBtn;
    UIControl *_clickControl;
    NSString *_currentLoadUrl;
}

@property(nonatomic) _Bool hasShow; // @synthesize hasShow=_hasShow;
@property(copy, nonatomic) NSString *currentLoadUrl; // @synthesize currentLoadUrl=_currentLoadUrl;
@property(retain, nonatomic) UIControl *clickControl; // @synthesize clickControl=_clickControl;
@property(retain, nonatomic) UIButton *backBtn; // @synthesize backBtn=_backBtn;
@property(retain, nonatomic) ChildWebViewFailView *failView; // @synthesize failView=_failView;
@property(copy, nonatomic) CDUnknownBlockType getProfileInfoHandler; // @synthesize getProfileInfoHandler=_getProfileInfoHandler;
@property(copy, nonatomic) CDUnknownBlockType indicateActivityReadyHandler; // @synthesize indicateActivityReadyHandler=_indicateActivityReadyHandler;
@property(copy, nonatomic) CDUnknownBlockType exitActivityHandler; // @synthesize exitActivityHandler=_exitActivityHandler;
@property(copy, nonatomic) CDUnknownBlockType backBlock; // @synthesize backBlock=_backBlock;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)reachabilityChanged:(id)arg1;
- (void)onBackClick:(id)arg1;
- (void)didClickedRloadBtn;
- (void)childReload;
- (id)stringFromBundleFileWithFileName:(id)arg1;
@property(nonatomic, getter=isUseWKWebView) long long useWKWebView;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)loadFinish:(id)arg1;
- (void)setupNavBar;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)setLoadUrl:(id)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(nonatomic) _Bool allowsInlineMediaPlayback;
@property(nonatomic) _Bool bounces;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy, nonatomic) CDUnknownBlockType didFailLoadAction;
@property(copy, nonatomic) CDUnknownBlockType didFinishLoadAction;
@property(copy, nonatomic) CDUnknownBlockType didReceiveJSLogAction;
@property(copy, nonatomic) CDUnknownBlockType didStartLoadAction;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) UIView<WVWebViewProtocol> *internalWebView;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction;
@property(nonatomic, getter=isOpenLocalService) _Bool openLocalService;
@property(nonatomic, getter=isOpenLongPressSaveImage) _Bool openLongPressSaveImage;
@property(nonatomic, getter=isOpenWebKitLongPress) _Bool openWebKitLongPress;
@property(copy, nonatomic) CDUnknownBlockType shouldStartLoadAction;
@property(readonly) Class superclass;
@property(nonatomic, getter=isUseCustomPullToRefresh) _Bool useCustomPullToRefresh;
@property(nonatomic, getter=isUseInfiniteScrolling) _Bool useInfiniteScrolling;
@property(nonatomic, getter=isUsePullToRefresh) _Bool usePullToRefresh;
@property(readonly, nonatomic) WVUserContentController *userContentController;
@property(readonly, nonatomic) UIView<WVWebViewProtocol> *webView;
@property(readonly, nonatomic) _Bool webViewCanGoBack;
@property(readonly, nonatomic) _Bool webViewCanGoForward;
@property(readonly, nonatomic, getter=isWebViewLoading) _Bool webViewLoading;
@property(readonly, copy, nonatomic) NSURLRequest *webViewRequest;
@property(readonly, nonatomic) __weak UIScrollView *webViewScrollView;
@property(readonly, copy, nonatomic) NSURL *webViewURL;

@end

