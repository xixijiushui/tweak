//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class EPCTexture2D;

@interface EPCParticles : NSObject
{
    _Bool _CAndAInvertMap;
    _Bool _displacementInvertMap;
    _Bool _sizeInvertMap;
    _Bool _fractalInvertMap;
    _Bool _disperseInvertMap;
    int _particleType;
    float _sphereFeather;
    float _size;
    float _sizeRandom;
    float _opacity;
    float _opacityRandom;
    int _CAndAFunctionality;
    int _CAndALMType;
    int _displacementFunctionality;
    int _displacementLMType;
    float _displacementStrength;
    int _sizeLMType;
    int _fractalLMType;
    int _disperseLMType;
    float _dispersion;
    float _twist;
    int _fractalSumType;
    float _fractalFrequence;
    int _fractalComplexity;
    float _fractalOctaveMultiplier;
    float _fractalOctaveScale;
    float _flowEvolution;
    float _offsetEvolution;
    float _sphericalFieldStrength;
    float _sphericalFieldRadius;
    float _sphericalFieldScaleX;
    float _sphericalFieldScaleY;
    float _sphericalFieldScaleZ;
    float _sphericalFieldRotationX;
    float _sphericalFieldRotationY;
    float _sphericalFieldRotationZ;
    float _sphericalFieldFeather;
    int _reservedParticleCount;
    int _preParticleCount;
    int _curParticleCount;
    EPCTexture2D *_particleTexture;
    EPCTexture2D *_CAndALMTexture;
    EPCTexture2D *_displacementLMTextureForXYZ;
    EPCTexture2D *_displacementLMTextureForX;
    EPCTexture2D *_displacementLMTextureForY;
    EPCTexture2D *_displacementLMTextureForZ;
    EPCTexture2D *_sizeLMTexture;
    EPCTexture2D *_fractalLMTexture;
    EPCTexture2D *_disperseLMTexture;
    CDStruct_59146b74 *_particles;
    CDStruct_03942939 _color;
    CDStruct_03942939 _displace;
    CDStruct_03942939 _flow;
    CDStruct_03942939 _sphericalFieldPosition;
}

@property(nonatomic) CDStruct_59146b74 *particles; // @synthesize particles=_particles;
@property(nonatomic) int curParticleCount; // @synthesize curParticleCount=_curParticleCount;
@property(nonatomic) int preParticleCount; // @synthesize preParticleCount=_preParticleCount;
@property(nonatomic) int reservedParticleCount; // @synthesize reservedParticleCount=_reservedParticleCount;
@property(nonatomic) float sphericalFieldFeather; // @synthesize sphericalFieldFeather=_sphericalFieldFeather;
@property(nonatomic) float sphericalFieldRotationZ; // @synthesize sphericalFieldRotationZ=_sphericalFieldRotationZ;
@property(nonatomic) float sphericalFieldRotationY; // @synthesize sphericalFieldRotationY=_sphericalFieldRotationY;
@property(nonatomic) float sphericalFieldRotationX; // @synthesize sphericalFieldRotationX=_sphericalFieldRotationX;
@property(nonatomic) float sphericalFieldScaleZ; // @synthesize sphericalFieldScaleZ=_sphericalFieldScaleZ;
@property(nonatomic) float sphericalFieldScaleY; // @synthesize sphericalFieldScaleY=_sphericalFieldScaleY;
@property(nonatomic) float sphericalFieldScaleX; // @synthesize sphericalFieldScaleX=_sphericalFieldScaleX;
@property(nonatomic) float sphericalFieldRadius; // @synthesize sphericalFieldRadius=_sphericalFieldRadius;
@property(nonatomic) CDStruct_03942939 sphericalFieldPosition; // @synthesize sphericalFieldPosition=_sphericalFieldPosition;
@property(nonatomic) float sphericalFieldStrength; // @synthesize sphericalFieldStrength=_sphericalFieldStrength;
@property(nonatomic) float offsetEvolution; // @synthesize offsetEvolution=_offsetEvolution;
@property(nonatomic) float flowEvolution; // @synthesize flowEvolution=_flowEvolution;
@property(nonatomic) CDStruct_03942939 flow; // @synthesize flow=_flow;
@property(nonatomic) CDStruct_03942939 displace; // @synthesize displace=_displace;
@property(nonatomic) float fractalOctaveScale; // @synthesize fractalOctaveScale=_fractalOctaveScale;
@property(nonatomic) float fractalOctaveMultiplier; // @synthesize fractalOctaveMultiplier=_fractalOctaveMultiplier;
@property(nonatomic) int fractalComplexity; // @synthesize fractalComplexity=_fractalComplexity;
@property(nonatomic) float fractalFrequence; // @synthesize fractalFrequence=_fractalFrequence;
@property(nonatomic) int fractalSumType; // @synthesize fractalSumType=_fractalSumType;
@property(nonatomic) float twist; // @synthesize twist=_twist;
@property(nonatomic) float dispersion; // @synthesize dispersion=_dispersion;
@property(nonatomic) _Bool disperseInvertMap; // @synthesize disperseInvertMap=_disperseInvertMap;
@property(nonatomic) int disperseLMType; // @synthesize disperseLMType=_disperseLMType;
@property(retain, nonatomic) EPCTexture2D *disperseLMTexture; // @synthesize disperseLMTexture=_disperseLMTexture;
@property(nonatomic) _Bool fractalInvertMap; // @synthesize fractalInvertMap=_fractalInvertMap;
@property(nonatomic) int fractalLMType; // @synthesize fractalLMType=_fractalLMType;
@property(retain, nonatomic) EPCTexture2D *fractalLMTexture; // @synthesize fractalLMTexture=_fractalLMTexture;
@property(nonatomic) _Bool sizeInvertMap; // @synthesize sizeInvertMap=_sizeInvertMap;
@property(nonatomic) int sizeLMType; // @synthesize sizeLMType=_sizeLMType;
@property(retain, nonatomic) EPCTexture2D *sizeLMTexture; // @synthesize sizeLMTexture=_sizeLMTexture;
@property(nonatomic) _Bool displacementInvertMap; // @synthesize displacementInvertMap=_displacementInvertMap;
@property(nonatomic) float displacementStrength; // @synthesize displacementStrength=_displacementStrength;
@property(retain, nonatomic) EPCTexture2D *displacementLMTextureForZ; // @synthesize displacementLMTextureForZ=_displacementLMTextureForZ;
@property(retain, nonatomic) EPCTexture2D *displacementLMTextureForY; // @synthesize displacementLMTextureForY=_displacementLMTextureForY;
@property(retain, nonatomic) EPCTexture2D *displacementLMTextureForX; // @synthesize displacementLMTextureForX=_displacementLMTextureForX;
@property(retain, nonatomic) EPCTexture2D *displacementLMTextureForXYZ; // @synthesize displacementLMTextureForXYZ=_displacementLMTextureForXYZ;
@property(nonatomic) int displacementLMType; // @synthesize displacementLMType=_displacementLMType;
@property(nonatomic) int displacementFunctionality; // @synthesize displacementFunctionality=_displacementFunctionality;
@property(nonatomic) _Bool CAndAInvertMap; // @synthesize CAndAInvertMap=_CAndAInvertMap;
@property(nonatomic) int CAndALMType; // @synthesize CAndALMType=_CAndALMType;
@property(nonatomic) int CAndAFunctionality; // @synthesize CAndAFunctionality=_CAndAFunctionality;
@property(retain, nonatomic) EPCTexture2D *CAndALMTexture; // @synthesize CAndALMTexture=_CAndALMTexture;
@property(nonatomic) CDStruct_03942939 color; // @synthesize color=_color;
@property(nonatomic) float opacityRandom; // @synthesize opacityRandom=_opacityRandom;
@property(nonatomic) float opacity; // @synthesize opacity=_opacity;
@property(nonatomic) float sizeRandom; // @synthesize sizeRandom=_sizeRandom;
@property(nonatomic) float size; // @synthesize size=_size;
@property(nonatomic) float sphereFeather; // @synthesize sphereFeather=_sphereFeather;
@property(retain, nonatomic) EPCTexture2D *particleTexture; // @synthesize particleTexture=_particleTexture;
@property(nonatomic) int particleType; // @synthesize particleType=_particleType;
- (void).cxx_destruct;
- (_Bool)shouldUseOffScreenRendering;
- (void)dealloc;
- (void)releaseParticles;
- (void)reserveParticles;

@end

