//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSDictionary, NSString, UIGestureRecognizer, UIView, UIViewController, YTEYoukuPlayModel, YTEngineAdPlayerAdaptor, YTEngineController, YTEngineFeedCacheManager, YTEngineRequestUpsModule, YTEngineScreenMode, YTEngineYoukuPlayerEventsModule;

@interface YTEnginePlayer : NSObject
{
    YTEngineController *mEngineController;
    YTEngineFeedCacheManager *mFeedCacheManager;
    _Bool _isPausing;
    _Bool _isLoading;
    _Bool _isSeeking;
    _Bool _isLocalPlay;
    _Bool _isWoFreePlaying;
    _Bool _isDeinit;
    _Bool _audioPlayerMasterEnable;
    long long _errorCode;
    long long _streamType;
    long long _videoShowType;
    long long _adIndex;
    YTEngineRequestUpsModule *_upsModule;
    YTEYoukuPlayModel *_currentItem;
    NSDictionary *_currentExtraInfo;
    double _duration;
    double _currentTime;
    double _loadedTime;
    double _adCountdown;
    NSString *_forcastUPSVid;
    NSString *_lastForcastUPSVid;
    YTEngineYoukuPlayerEventsModule *_mEventsModule;
    YTEngineAdPlayerAdaptor *_mAdPlayerAdapter;
}

+ (void)enableHttpDns:(_Bool)arg1;
+ (_Bool)isNeedDisableAd;
+ (void)endSearchDevices;
+ (void)beginSearchDevices;
+ (id)deviceInfoList;
+ (id)currentPlayDeviceInfo;
+ (id)deviceList;
+ (id)currentPlayDevice;
+ (void)preloadWithVids:(id)arg1;
+ (id)getCkeyWithParams:(id)arg1;
+ (void)getPlayerDiskCacheAsync:(CDUnknownBlockType)arg1;
+ (void)clearPlayerDiskCacheAsync:(CDUnknownBlockType)arg1;
+ (id)cacheProcessQueue;
@property(retain, nonatomic) YTEngineAdPlayerAdaptor *mAdPlayerAdapter; // @synthesize mAdPlayerAdapter=_mAdPlayerAdapter;
@property(retain, nonatomic) YTEngineYoukuPlayerEventsModule *mEventsModule; // @synthesize mEventsModule=_mEventsModule;
@property(copy, nonatomic) NSString *lastForcastUPSVid; // @synthesize lastForcastUPSVid=_lastForcastUPSVid;
@property(copy, nonatomic) NSString *forcastUPSVid; // @synthesize forcastUPSVid=_forcastUPSVid;
@property(nonatomic) _Bool audioPlayerMasterEnable; // @synthesize audioPlayerMasterEnable=_audioPlayerMasterEnable;
@property(nonatomic) double adCountdown; // @synthesize adCountdown=_adCountdown;
@property(nonatomic) double loadedTime; // @synthesize loadedTime=_loadedTime;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool isDeinit; // @synthesize isDeinit=_isDeinit;
@property(nonatomic) _Bool isWoFreePlaying; // @synthesize isWoFreePlaying=_isWoFreePlaying;
@property(nonatomic) _Bool isLocalPlay; // @synthesize isLocalPlay=_isLocalPlay;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(nonatomic) _Bool isPausing; // @synthesize isPausing=_isPausing;
@property(retain, nonatomic) NSDictionary *currentExtraInfo; // @synthesize currentExtraInfo=_currentExtraInfo;
@property(retain, nonatomic) YTEYoukuPlayModel *currentItem; // @synthesize currentItem=_currentItem;
@property(retain, nonatomic) YTEngineRequestUpsModule *upsModule; // @synthesize upsModule=_upsModule;
@property(nonatomic) long long adIndex; // @synthesize adIndex=_adIndex;
@property(nonatomic) long long videoShowType; // @synthesize videoShowType=_videoShowType;
@property(nonatomic) long long streamType; // @synthesize streamType=_streamType;
@property(nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
- (void).cxx_destruct;
- (void)cancelForecastPreload;
- (void)preloadForecastWithItem:(id)arg1;
- (void)forecastUPSVideoInfoWithVid:(id)arg1;
- (void)forcastUPSInfoWithPlayedTime:(double)arg1;
- (void)enginePlayer:(id)arg1 updateVideoPlayedTime:(double)arg2;
- (id)sessionid;
- (id)adConfigInfo;
- (_Bool)isFooterAdShowing;
- (_Bool)needsShowInteract;
- (void)setCMSConfig:(id)arg1;
- (void)setOfflineAdvertisementEnable:(_Bool)arg1;
- (void)setBuildType:(long long)arg1;
- (void)setMasterLogEnable:(_Bool)arg1;
- (id)getHeartbeatDownloadSpeedStr;
- (id)statisticsModelInfo;
- (void)deinit;
- (id)initWithConfiguration:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)resume;
- (void)interrupt;
- (void)completeUPSRequestParameters:(id)arg1 vid:(id)arg2 quality:(id)arg3 extraInfo:(id)arg4 isForecast:(_Bool)arg5 hasAd:(_Bool)arg6;
- (void)playPreloadVid:(id)arg1 extraInfo:(id)arg2;
- (void)playWithYoukuVid:(id)arg1 quality:(id)arg2 decodeScheme:(unsigned long long)arg3 extraInfo:(id)arg4;
- (void)playWithPlayItem:(id)arg1 quality:(id)arg2 decodeScheme:(unsigned long long)arg3 isLocalPlay:(_Bool)arg4 extraInfo:(id)arg5;
- (void)endRequestWithId:(id)arg1 extraInfo:(id)arg2;
- (void)startRequestWithId:(id)arg1 extraInfo:(id)arg2;
- (void)endPlayWithErrorInfo:(id)arg1;
- (void)startRequestWithId:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)uninstallEventsObservers;
- (void)installEventsObservers;
- (id)internalPlayer;
- (id)engineController;
@property(nonatomic) __weak UIViewController *controller;
- (void)setAdDataSource:(id)arg1;
- (id)adDataSource;
- (void)setYoukuDataSource:(id)arg1;
- (id)youkuDataSource;
@property(nonatomic) __weak id <YTEnginePlayerAdDelegate> adDelegate; // @dynamic adDelegate;
@property(nonatomic) __weak id <YTEnginePlayerDelegate> playerDelegate; // @dynamic playerDelegate;
- (void)setADParams:(id)arg1;
- (void)setSwitchConfig:(id)arg1;
- (void)setPauseExternalStatus:(_Bool)arg1;
- (void)setUseUps:(_Bool)arg1;
- (_Bool)useUps;
- (id)corePlayerQuality;
- (_Bool)isRTMPEVideo;
- (_Bool)isSupportSuperHD2Video;
- (void)setWaterMarkInfo:(id)arg1;
- (void)setHttpUserAgent:(id)arg1;
- (void)setEnableLoadData:(_Bool)arg1;
@property(nonatomic) _Bool enableLoop;
@property(nonatomic) float volume; // @dynamic volume;
@property(nonatomic) unsigned long long scheme; // @dynamic scheme;
- (id)qualitySizeDict;
- (id)qualityArray;
- (id)languageArray;
@property(copy, nonatomic) NSString *langcode;
@property(retain, nonatomic) NSString *quality; // @dynamic quality;
- (void)switchSubtitle:(_Bool)arg1;
- (void)renewUpsWithBlockSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)remoteServiceImmediateLogWithModuleType:(long long)arg1 extraInfo:(id)arg2;
- (id)searchValueForKey:(id)arg1;
- (id)currentStatisticsInfo;
- (void)setIsTimeShifting:(_Bool)arg1;
- (void)liveWillStop;
- (id)upsInfo;
- (double)playable;
- (double)played;
- (double)tailVideoDuration;
- (double)headVideoDuration;
- (double)tailTime;
- (double)headTime;
@property(readonly, copy, nonatomic) NSString *playBackState;
@property(readonly, copy, nonatomic) NSString *state;
- (_Bool)logoFrame:(struct CGRect *)arg1 fromInfo:(id)arg2 canvasSize:(struct CGSize)arg3;
- (id)logoImage:(id)arg1;
- (id)captureVideoFrameWithBarrageView:(id)arg1 parameters:(id)arg2;
- (id)captureVideoFrame:(id)arg1;
- (void)captureScreenEnd:(long long)arg1 success:(CDUnknownBlockType)arg2;
- (void)captureScreenEnd:(long long)arg1 finishStartTime:(double)arg2 finishEndTime:(double)arg3 paramInfo:(id)arg4;
- (id)captureScreen:(id)arg1 destinationFormat:(long long)arg2 logoPath:(id)arg3 paramInfo:(id)arg4;
- (struct CGSize)getVideoSize;
- (void)hidePositionViewWithEventType:(unsigned long long)arg1;
- (void)showPositionViewWithEventType:(unsigned long long)arg1;
- (int)setVideoRendCutMode:(int)arg1 xOffset:(float)arg2 yOffset:(float)arg3;
- (_Bool)switchScreenModeTo:(id)arg1 animated:(_Bool)arg2;
- (void)setInitialScreenMode:(id)arg1;
@property(readonly, nonatomic) YTEngineScreenMode *currentScreenMode; // @dynamic currentScreenMode;
@property(nonatomic) float scale; // @dynamic scale;
@property(nonatomic) long long gravity; // @dynamic gravity;
@property(readonly, nonatomic) UIView *view; // @dynamic view;
- (void)endSeek:(double)arg1;
- (void)beginSeek:(double)arg1;
- (void)seekToEnd;
@property(nonatomic, getter=isAutoSkipHead) _Bool autoSkipHead;
- (void)dpause;
- (void)setPlaybackSpeed:(double)arg1;
- (void)seekToTime:(double)arg1;
- (void)stop;
- (void)replay;
- (void)pause;
- (void)play;
- (void)verifyAirplayDevicePassword:(id)arg1;
- (void)stopAirplay;
- (void)startAirplayWithUrl:(id)arg1 ip:(id)arg2 port:(long long)arg3 start:(double)arg4 total:(double)arg5;
- (void)sendAuthenticate:(id)arg1;
- (void)stopAirPlayBackToPlayer;
- (void)startAirPlayOnDeviceInfo:(id)arg1;
- (void)startAirPlayOnDevice:(id)arg1;
- (_Bool)isAirPlaying;
@property(nonatomic, getter=isAirplayEnabled) _Bool airplayEnabled;
- (void)setVRScreenMode:(long long)arg1;
- (void)changeMainPerspective:(_Bool)arg1;
- (float)getPerspectiveAngle;
- (void)openVRMode:(_Bool)arg1;
@property(retain, nonatomic) UIGestureRecognizer *gestureForSpheer3DVideo;
- (_Bool)spheer3DVideo;
@property(readonly, nonatomic, getter=isBackgroundPlayingAudioMode) _Bool backgroundPlayingAudioMode;
@property(readonly, nonatomic, getter=isSupportBackgroundAudio) _Bool supportBackgroundAudio;
@property(nonatomic) _Bool backgroundPlayAudioEnable;
@property(nonatomic) _Bool audioPlayMasterEnable;
@property(readonly, nonatomic, getter=isStereoPlayingAudioMode) _Bool stereoPlayingAudioMode;
@property(readonly, nonatomic, getter=isSupportStereoAudio) _Bool supportStereoAudio;
@property(nonatomic) _Bool stereoPlayAudioEnable;
- (void)setNeedSightEnhanceStatus:(_Bool)arg1;
- (_Bool)needSightEnhanceStatus;
@property(nonatomic) _Bool needSightEnhance;
- (_Bool)suggestSightEnhance;
- (void)setPositionUpdateTimeInterval:(long long)arg1;
- (void)setSeiInfoUploadEnable:(_Bool)arg1;
- (void)setBufferTimePlaying:(long long)arg1 BeforePlay:(long long)arg2;
- (void)setPursueVideoFrameType:(long long)arg1;
- (void)setLaiFengTimeStampMode:(long long)arg1;
- (id)title;
- (void)preCachingVideoInfoWithVid:(id)arg1;
- (void)preloadWithVids:(id)arg1;
- (void)feedNetcachePreloadWithItems:(id)arg1;
- (void)feedPreloadWithPlayUrls:(id)arg1;
- (void)feedPreloadWithItems:(id)arg1;
- (void)feedPlayWithPlayItem:(id)arg1 quality:(id)arg2 decodeScheme:(unsigned long long)arg3 isLocalPlay:(_Bool)arg4 extraInfo:(id)arg5;
- (void)switchInteractiveVideoBranchWithVid:(id)arg1 pos:(double)arg2;
- (void)preloadInteractiveVideoBranchWithVid:(id)arg1 pos:(double)arg2;

@end

