//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ALAssetsLibrary, PHCachingImageManager;

@interface YKSAliyunPhotoLibraryManager : NSObject
{
    _Bool _hideWhenCanNotSelect;
    _Bool _sortAscendingByModificationDate;
    PHCachingImageManager *_cachingImageManager;
    long long _minPhotoWidthSelectable;
    long long _minPhotoHeightSelectable;
    ALAssetsLibrary *_assetLibrary;
}

+ (id)sharedManager;
@property(retain, nonatomic) ALAssetsLibrary *assetLibrary; // @synthesize assetLibrary=_assetLibrary;
@property(nonatomic) _Bool sortAscendingByModificationDate; // @synthesize sortAscendingByModificationDate=_sortAscendingByModificationDate;
@property(nonatomic) _Bool hideWhenCanNotSelect; // @synthesize hideWhenCanNotSelect=_hideWhenCanNotSelect;
@property(nonatomic) long long minPhotoHeightSelectable; // @synthesize minPhotoHeightSelectable=_minPhotoHeightSelectable;
@property(nonatomic) long long minPhotoWidthSelectable; // @synthesize minPhotoWidthSelectable=_minPhotoWidthSelectable;
@property(retain, nonatomic) PHCachingImageManager *cachingImageManager; // @synthesize cachingImageManager=_cachingImageManager;
- (void).cxx_destruct;
- (id)fixOrientation:(id)arg1;
- (long long)orientationFromImage:(id)arg1;
- (id)configurePredicateWithAllowImage:(_Bool)arg1 allowVideo:(_Bool)arg2 range:(struct YKSVideoDurationRange)arg3;
- (struct CGSize)photoSizeWithAsset:(id)arg1;
- (_Bool)isPhotoSelectableWithAsset:(id)arg1;
- (id)assetModelWithAsset:(id)arg1 allowPickingVideo:(_Bool)arg2 allowPickingImage:(_Bool)arg3;
- (_Bool)isCameraRollAlbum:(id)arg1;
- (void)getVideoWithAsset:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getAssetFromFetchResult:(id)arg1 atIndex:(long long)arg2 allowPickingVideo:(_Bool)arg3 allowPickingImage:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)getAssetsFromFetchResult:(id)arg1 allowPickingVideo:(_Bool)arg2 allowPickingImage:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getAllAlbums:(_Bool)arg1 allowPickingImage:(_Bool)arg2 durationRange:(struct YKSVideoDurationRange)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getCameraRollAssetWithallowPickingVideo:(_Bool)arg1 allowPickingImage:(_Bool)arg2 durationRange:(struct YKSVideoDurationRange)arg3 completion:(CDUnknownBlockType)arg4;
- (void)getPostImageWithAlbumModel:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (int)getPhotoWithAsset:(id)arg1 photoWidth:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (int)getPhotoWithAsset:(id)arg1 photoWidth:(double)arg2 completion:(CDUnknownBlockType)arg3 progressHandler:(CDUnknownBlockType)arg4 networkAccessAllowed:(_Bool)arg5;
- (void)getPhotoWithAsset:(id)arg1 thumbnailWidth:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getPhotoWithAsset:(id)arg1 thumbnailImage:(_Bool)arg2 photoWidth:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)saveVideoAtUrl:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)saveVideoAtUrl:(id)arg1 toAlbumName:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)savePhotoWithImage:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestAuthorization:(CDUnknownBlockType)arg1;
- (long long)authorizationStatus;
- (_Bool)authorizationStatusAuthorized;

@end

