//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableArray, TSDGLDataBuffer, TSDGLShader;

@interface ICDrawingResourceHandler : NSObject
{
    TSDGLShader *_renderShader;
    TSDGLShader *_compositeWhiteShader;
    TSDGLShader *_compositePaperShader;
    TSDGLShader *_compositeOverShader[4];
    TSDGLShader *_compositeMultiplyShader[4];
    TSDGLShader *_compositeSoftWhiteShader[4];
    TSDGLShader *_compositeEraseShader[4];
    TSDGLShader *_paintShader;
    TSDGLShader *_paintCircleShader;
    TSDGLShader *_paperShader;
    TSDGLShader *_particleShader;
    int _paperTexture;
    struct CGSize _paperTextureSize;
    int _pencilParticleTexture;
    int _markerParticleTexture;
    unsigned long long _reusablePaintDataBufferCapacity;
    TSDGLDataBuffer *_quadBuffer;
    struct __CVOpenGLESTextureCache *_textureCache;
    int _backingWidth;
    int _backingHeight;
    NSMutableArray *_drawingFrameBuffers;
    NSMutableArray *_paintFrameBuffers;
    NSMutableArray *_strokeBuffers;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) int backingHeight; // @synthesize backingHeight=_backingHeight;
@property(readonly, nonatomic) int backingWidth; // @synthesize backingWidth=_backingWidth;
@property(readonly, nonatomic) NSMutableArray *strokeBuffers; // @synthesize strokeBuffers=_strokeBuffers;
@property(readonly, nonatomic) NSMutableArray *paintFrameBuffers; // @synthesize paintFrameBuffers=_paintFrameBuffers;
@property(readonly, nonatomic) NSMutableArray *drawingFrameBuffers; // @synthesize drawingFrameBuffers=_drawingFrameBuffers;
- (void).cxx_destruct;
- (void)preloadResources;
- (void)flushMemoryIfPossible;
- (id)paintDataBufferWithCapacity:(unsigned long long)arg1 dynamicDraw:(_Bool)arg2;
- (void)updateFullScreenQuadDataBuffer:(id)arg1 flipped:(_Bool)arg2;
- (id)quadDataBufferForDynamicDraw:(_Bool)arg1;
- (id)cachedQuadDataBuffer;
@property(readonly, nonatomic) unsigned int markerTexture;
@property(readonly, nonatomic) unsigned int pencilTexture;
@property(readonly, nonatomic) struct CGSize paperTextureSize;
@property(readonly, nonatomic) unsigned int paperTexture;
@property(readonly, nonatomic) TSDGLShader *particleShader;
@property(readonly, nonatomic) TSDGLShader *paperShader;
@property(readonly, nonatomic) TSDGLShader *paintCircleShader;
@property(readonly, nonatomic) TSDGLShader *paintShader;
- (id)compositeEraseShaderOnPaper:(_Bool)arg1 clipping:(_Bool)arg2;
- (id)compositeSoftWhiteShaderOnPaper:(_Bool)arg1 clipping:(_Bool)arg2;
- (id)compositeMultiplyShaderOnPaper:(_Bool)arg1 clipping:(_Bool)arg2;
- (id)compositeOverShaderOnPaper:(_Bool)arg1 clipping:(_Bool)arg2;
- (id)compositeShader:(id *)arg1 fragmentName:(id)arg2 onPaper:(_Bool)arg3 clipping:(_Bool)arg4;
@property(readonly, nonatomic) TSDGLShader *compositePaperShader;
- (id)compositeWhiteShader;
@property(readonly, nonatomic) TSDGLShader *renderShader;
- (void)releasePaintFrameBuffer:(id)arg1;
- (void)releaseDrawingFrameBuffer:(id)arg1;
- (id)claimPaintFrameBuffer;
- (id)claimDrawingFrameBuffer;
- (id)paintTexConfig;
- (id)drawingTexConfig;
- (id)init;

@end

